[
  {
    "path": "posts/welcome/",
    "title": "Setting Up Supervised Learning Probems",
    "description": {},
    "author": [
      {
        "name": "Kris Sankaran",
        "url": "https://krisrs1128.github.com/LSLab"
      }
    ],
    "date": "2021-12-15",
    "categories": [],
    "contents": "\nWe are making predictions all the time, often without realizing it. For example, imagine we are waiting at a bus stop and want to guess how long it will be before a bus arrives. We can combine many sources of evidence,\nHow many people are currently at the stop? If there are more people, we think a bus might arrive soon.\nWhat time of day is it? If it’s during rush hour, we would expect more frequent service.\nWhat is the weather like? If it is poor weather, we might expect delays.\netc.\nTo think about the process formally, we could imagine a vector \\(x_i \\in \\mathbb{R}^{D}\\) reflecting \\(D\\) characteristics of our environment. If we collected data about how long we actually had to wait, call it \\(y_i\\), for every day in a year, then we would have a dataset \\[\\begin{align*}\n\\left(x_1, y_1\\right) \\\\\n\\left(x_2, y_2\\right) \\\\\n\\vdots \\\\\n\\left(x_{365}, y_{365}\\right) \\\\\n\\end{align*}\\] and we could try to summarize the relationship \\(x_i \\to y_i\\). Methods for making this process automatic, based simply on a training dataset, are called supervised learning methods.\nIn the above example, the inputs were a mix of counts (number of people at stop?) and categorical (weather) data types, and our response was a nonnegative continuous value. In general, we could have arbitrary data types for either input or response variable. A few types of outputs are so common that they come with their own names,\n\\(y_i\\) continuous \\(\\to\\) regression\n\\(y_i\\) categorical \\(\\to\\) classification\nFor example, trying to determine whether a patient’s disease will be cured by a treatment is a classification problem – the outcomes are either yes, they will be cured, or no, they won’t. Trying to estimate the crop yield of a plot of farmland based on a satellite image is a regression problem – it could be any continuous, nonnegative number. There are in fact many other types of responses (ordinal, multiresponse, survival, functional, image-to-image, …) each which come with their own names and set of methods, but for our purposes, it’s enough to focus on regression and classification.\nThere is a nice geometric way of thinking about supervised learning. For regression, think of the inputs on the \\(x\\)-axis and the response on the \\(y\\)-axis. Regression then becomes the problem of estimating a one-dimensional curve from data.\nIn higher-dimensions, this becomes a surface.\nIf some of the inputs are categorical (e.g., poor vs. good weather), then the regression function is no longer a continuous curve, but we can still identify group means.\nClassification has a similar geometric interpretation, except instead of a continuous response, we have categorical labels. We can associate classes with colors. If we have only one input, classification is the problem of learning which regions of the input are associated with certain colors.\nIn higher-dimensions, the view is analogous. We just want to find boundaries between regions with clearly distinct colors. For example, for disease recurrence, blood pressure and resting heart rate might be enough to make a good guess about whether a patient will have recurrence or not.\nDrawing curves and boundaries sounds simple, but is a surprisingly difficult problem, especially when the number of potentially informative features \\(D\\) is large. It helps to have predefined types of curves (and boundaries) that we can refer to and use to partially automate the process of supervised learning. We’ll call an example of these predefined curve types a “model class.” In later notes, we’ll discuss how exactly to choose one member of each model class that fits a dataset well. For now, let’s just build some intuition about what each model class looks like and how we might be able to fit it with data.\nRecording 1: Setting up supervised learning problems 3. Basic model classes 1. Linear and logistic 1. Graphical representations 2. Mathematical setup 3. Implementation in sklearn 2. Sparse linear and logistic 1. Graphical representations 2. Mathematical setup 3. Implementation in sklearn 3. Tree-based 1. Graphical representations 2. Mathematical setup 3. Implementation in sklearn 4. Relationships between model classes 1. Concept map. Links showing l1 penalty for sparsity. trees for nonlinearity. 2. Strengths vs. weaknesses\n\n\n\n",
    "preview": {},
    "last_modified": "2021-12-15T14:37:35-06:00",
    "input_file": "welcome.knit.md"
  }
]
